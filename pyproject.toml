[build-system]
requires = ["setuptools>=61", "wheel"]
build-backend = "setuptools.build_meta"

[tool.setuptools.packages.find]
where = ["src"]
exclude = ["tests*", "docs*", "benchmarks*", "examples*"]


[tool.setuptools.package-data]
"piwardrive" = ["py.typed", "web_gui/*"]

[project]
name = "piwardrive"
version = "0.1.0"
description = "Headless war-driving toolkit with a Kivy interface"
readme = "README.md"
requires-python = ">=3.10"
license = {file = "LICENSE"}
authors = [{name = "PiWardrive contributors"}]

[project.scripts]
piwardrive-service = "piwardrive.service:main"
piwardrive-webui = "piwardrive.webui_server:main"
health-export = "piwardrive.scripts.health_export:main"
health-import = "piwardrive.scripts.health_import:main"
piwardrive-prefetch = "piwardrive.scripts.prefetch_cli:main"
service-status = "piwardrive.scripts.service_status:main"
piwardrive-vacuum = "piwardrive.scripts.vacuum_db:main"
piwardrive-migrate = "piwardrive.scripts.migrate_db:main"
uav-record = "piwardrive.scripts.uav_record:main"
uav-track-playback = "piwardrive.scripts.uav_track_playback:main"
piwardrive-mbtiles = "piwardrive.scripts.vector_tile_customizer_cli:main"
piwardrive-prefetch-batch = "piwardrive.scripts.prefetch_batch:main"
log-follow = "piwardrive.scripts.log_follow:main"
config-cli = "piwardrive.scripts.config_cli:main"
calibrate-orientation = "piwardrive.scripts.calibrate_orientation:main"
piwardrive-kiosk = "piwardrive.scripts.kiosk:main"
export-log-bundle = "piwardrive.scripts.export_log_bundle:main"
piwardrive-maintain-tiles = "piwardrive.scripts.tile_maintenance_cli:main"





