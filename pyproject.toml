[build-system]
requires = ["setuptools>=61", "wheel"]
build-backend = "setuptools.build_meta"

[tool.setuptools.packages.find]
where = ["src"]
exclude = ["tests*", "docs*", "benchmarks*", "examples*"]


[tool.setuptools.package-data]
"piwardrive" = ["py.typed", "web_gui/*", "scripts/*.R"]

[project]
name = "piwardrive"
version = "0.1.0"
description = "Headless war-driving toolkit with a browser-based interface"
readme = "README.md"
requires-python = ">=3.10"
license = {file = "LICENSE"}
authors = [{name = "PiWardrive contributors"}]
keywords = ["war-driving", "wireless", "raspberry pi", "mapping"]
classifiers = [
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Operating System :: OS Independent",
    "Environment :: Console",
    "Topic :: Utilities",
]

[project.scripts]
piwardrive-service = "piwardrive.service:main"
piwardrive-webui = "piwardrive.webui_server:main"
health-export = "piwardrive.scripts.health_export:main"
health-import = "piwardrive.scripts.health_import:main"
health-stats = "piwardrive.scripts.health_stats:main"
piwardrive-prefetch = "piwardrive.scripts.prefetch_cli:main"
service-status = "piwardrive.scripts.service_status:main"
piwardrive-vacuum = "piwardrive.scripts.vacuum_db:main"
piwardrive-migrate = "piwardrive.scripts.migrate_db:main"
prune-db = "piwardrive.scripts.prune_db:main"
uav-record = "piwardrive.scripts.uav_record:main"
uav-track-playback = "piwardrive.scripts.uav_track_playback:main"
piwardrive-mbtiles = "piwardrive.scripts.vector_tile_customizer_cli:main"
piwardrive-prefetch-batch = "piwardrive.scripts.prefetch_batch:main"
log-follow = "piwardrive.scripts.log_follow:main"
config-cli = "piwardrive.scripts.config_cli:main"
calibrate-orientation = "piwardrive.scripts.calibrate_orientation:main"
export-orientation-map = "piwardrive.scripts.export_orientation_map:main"
check-orientation-sensors = "piwardrive.scripts.check_orientation_sensors:main"
piwardrive-kiosk = "piwardrive.cli.kiosk:main"
export-log-bundle = "piwardrive.scripts.export_log_bundle:main"
db-summary = "piwardrive.scripts.db_summary:main"
piwardrive-maintain-tiles = "piwardrive.scripts.tile_maintenance_cli:main"
export-gpx = "piwardrive.scripts.export_gpx:main"
export-shp = "piwardrive.scripts.export_shp:main"
export-grafana = "piwardrive.scripts.export_grafana:main"
scan-report = "piwardrive.scripts.scan_report:main"

[project.optional-dependencies]
c-extensions = [
    "orjson",
    "ujson",
]
tests = [
    "numpy",
    "pandas",
    "scikit-learn",
    "scipy",
]





