import { useEffect, useState } from 'react';
import { computeSecurityScore } from '../securityAnalytics.js';

export default function VulnerabilityScanner() {
  const [info, setInfo] = useState(null);

  useEffect(() => {
    const load = () => {
      fetch('/vulnerability-scan')
        .then(r => r.json())
        .then(setInfo)
        .catch(() => setInfo(null));
    };
    load();
    const id = setInterval(load, 15000);
    return () => clearInterval(id);
  }, []);

  if (!info) return <div>Vulnerability Scan: N/A</div>;

  const networkScore = info.network_score;
  const encryptionStrength = info.encryption_strength;
  const configVulns = info.config_vulns || [];
  const compliance = info.compliance || [];
  const score = computeSecurityScore({
    networkScore,
    encryptionStrength,
    configIssues: configVulns,
  });

  return (
    <div>
      <div>Network Score: {networkScore ?? 'N/A'}</div>
      <div>Encryption Strength: {encryptionStrength ?? 'N/A'}</div>
      <div>Config Vulns: {configVulns.length}</div>
      <div>Compliance Checks: {compliance.length}</div>
      <div>Security Score: {score}</div>
    </div>
  );
}
