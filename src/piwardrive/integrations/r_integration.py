"""Call R code to summarize health metrics."""
from __future__ import annotations

from pathlib import Path
from typing import Dict, Optional


def health_summary(path: str, plot_path: Optional[str] = None) -> Dict[str, float]:
    """
    Compute average health metrics by invoking the `health_summary` R script via rpy2.
    
    Parameters:
        path (str): Path to the input data file for health metric computation.
        plot_path (Optional[str]): Optional path to save a plot generated by the R script.
    
    Returns:
        Dict[str, float]: Dictionary mapping health metric names to their average values.
    
    Raises:
        RuntimeError: If the `rpy2` library is not installed or cannot be imported.
    """
    try:
        from rpy2 import robjects
    except Exception as exc:
        raise RuntimeError("rpy2 is required for R integration") from exc

    r_script = Path(__file__).parent / "scripts" / "health_summary.R"
    robjects.r.source(str(r_script))
    r_func = robjects.globalenv["health_summary"]
    result = r_func(path, plot_path if plot_path is not None else robjects.NULL)
    return dict(zip(result.names, map(float, list(result))))
