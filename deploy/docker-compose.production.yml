version: "3.9"

services:
  piwardrive:
    build: ..
    image: piwardrive/prod
    restart: always
    environment:
      - PIWARDRIVE_ENV=production
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/api/v1/system/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    depends_on:
      - postgres
      - redis
    volumes:
      - piwardrive_data:/data
      - piwardrive_logs:/var/log/piwardrive
    networks:
      - internal

  postgres:
    image: postgres:16-alpine
    restart: always
    environment:
      - POSTGRES_DB=piwardrive
      - POSTGRES_USER=piwardrive
      - POSTGRES_PASSWORD=${DB_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - internal

  redis:
    image: redis:7-alpine
    restart: always
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    networks:
      - internal

  prometheus:
    image: prom/prometheus
    volumes:
      - ./config/prometheus.yml:/etc/prometheus/prometheus.yml:ro
    networks:
      - internal
    ports:
      - "9090:9090"

  grafana:
    image: grafana/grafana
    depends_on:
      - prometheus
    networks:
      - internal
    ports:
      - "3000:3000"
    volumes:
      - grafana_data:/var/lib/grafana

  nginx:
    image: nginx:alpine
    restart: always
    depends_on:
      - piwardrive
    volumes:
      - ./config/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    ports:
      - "80:80"
      - "443:443"
    networks:
      - internal

volumes:
  postgres_data:
  redis_data:
  grafana_data:
  piwardrive_data:
  piwardrive_logs:

networks:
  internal:
